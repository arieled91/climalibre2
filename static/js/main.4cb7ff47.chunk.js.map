{"version":3,"sources":["weather/backgroundImage/BackgroundImage.module.css","weather/weatherComponent/todayForecast/TodayForecast.module.css","weather/weatherComponent/weatherIcon/WeatherIcon.module.css","weather/Weather.module.css","weather/weatherComponent/WeatherComponent.module.css","localization/weather/WeatherLocal.js","api/Api.js","assets/cloudy-sky-min.jpg","assets/drizzle-min.jpg","assets/drizzle-night-min.jpg","assets/fog-min.jpg","assets/rainy-day-min.jpg","assets/snow-min.jpg","assets/storm-min.jpg","assets/sunny-min.jpg","assets/covered-min.jpg","assets/clear-sky-night-min.jpg","assets/cloudy-sky-night-min.jpg","assets/fog-night-min.jpg","assets/snow-night-min.jpg","assets/covered-night-min.jpg","assets/rainy-night-min.jpg","assets/cloudy-sky.jpg","assets/drizzle.jpg","assets/drizzle-night.jpg","assets/fog.jpg","assets/rainy-day.jpg","assets/snow.jpg","assets/storm.jpg","assets/sunny.jpg","assets/covered.jpg","assets/clear-sky-night.jpg","assets/cloudy-sky-night.jpg","assets/fog-night.jpg","assets/snow-night.jpg","assets/covered-night.jpg","assets/rainy-night.jpg","weather/Utils.js","weather/backgroundImage/BackgroundImage.js","weather/WeatherModel.js","weather/weatherComponent/weatherIcon/WeatherIcon.js","weather/weatherComponent/todayForecast/TodayForecast.js","weather/weatherComponent/WeatherComponent.js","weather/Weather.js","localization/AppLocal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","message","LocalizedStrings","en","locale","loading","humidity","feelsLike","wind","important","geolocationRequest","geolocationDisabled","north","northEast","east","southEast","south","southWest","west","northwest","station","noPrecipitations","precipitations","description","time","es","Api","Axios","get","this","IP_LOCATION","then","response","data","zipCode","countryCode","language","WEATHER","params","baseParams","q","lang","latitude","longitude","lat","lon","FORECAST","OWM_API_ID","URL","appid","units","fix","float","digits","parseFloat","toFixed","getLocalTime","stringTime","Date","toLocaleTimeString","hour","minute","hour12","charAt","substr","isDayTime","weather","sunrise","sys","sunset","now","getTime","classes","join","BackgroundImage","PropTypes","shape","name","string","array","main","object","list","React","useState","min","full","image","setImage","imageLoaded","setImageLoaded","isDayTimeWeather","useCallback","calculateImage","id","code","day","stormImg","stormImgMin","drizzleImg","drizzleImgMin","drizzleNightImg","drizzleNightImgMin","rainyImg","rainyImgMin","rainyNightImg","rainyNightImgMin","snowImg","snowImgMin","snowNightImg","snowNightImgMin","fogImg","fogImgMin","fogNightImg","fogNightImgMin","sunnyImg","sunnyImgMin","clearSkyNightImg","clearSkyNightImgMin","cloudyImg","cloudyImgMin","cloudySkyNightImg","cloudySkyNightImgMin","coveredImg","coveredImgMin","coveredNightImg","coveredNightImgMin","useEffect","className","styles","container","thumb","hidden","src","alt","onLoad","WeatherIcon","weatherCode","props","icon","setIcon","undefined","toString","includes","TodayForecast","forecasts","todayForecast","map","forecast","forecastContent","style","display","textAlign","size","color","temp","fontSize","dt","WeatherComponent","setTodayForecast","nextRain","setNextRain","forecastForToday","filter","w","hours24","setHours","getHours","a","b","tomorrowMorning","setDate","getDate","tomorrow","find","f","nextRainForecast","deg","bg","weatherComponent","mainComponent","date","toLocaleString","weekday","month","currentWeather","item","address","feels_like","speed","hideScrollbar","forecastContainer","Weather","setWeather","setForecast","error","setError","permission","setPermission","Permission","populateByLocation","navigator","geolocation","getCurrentPosition","position","coords","getWeatherByCoords","getLanguage","catch","e","console","log","getForecastByCoords","permissions","query","result","state","onchange","populateByCity","getIpLocation","location","getWeatherByCity","city","country_code","populate","onFocus","window","addEventListener","removeEventListener","Alert","severity","justifyContent","top","CircularProgress","local","title","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4cb7ff47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BackgroundImage_container__1g-yv\",\"image\":\"BackgroundImage_image__S0xfp\",\"thumb\":\"BackgroundImage_thumb__gmPWZ\",\"hidden\":\"BackgroundImage_hidden__3clwO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecastContent\":\"TodayForecast_forecastContent__36Mz9\",\"todayForecast\":\"TodayForecast_todayForecast__2g0ve\",\"forecastTitle\":\"TodayForecast_forecastTitle__2Rdyt\",\"extraShadow\":\"TodayForecast_extraShadow__1opR1\",\"temp\":\"TodayForecast_temp__1QXG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WeatherIcon_container__1zyV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Weather_container__2oDmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WeatherComponent_container__1o1Bu\",\"weatherComponent\":\"WeatherComponent_weatherComponent__3bNnQ\",\"description\":\"WeatherComponent_description__1ruKu\",\"hideScrollbar\":\"WeatherComponent_hideScrollbar__1CYwp\",\"date\":\"WeatherComponent_date__3_z9P\",\"forecastContainer\":\"WeatherComponent_forecastContainer__3z1uW\",\"currentWeather\":\"WeatherComponent_currentWeather__262FJ\",\"item\":\"WeatherComponent_item__36bXY\",\"address\":\"WeatherComponent_address__16t_H\",\"mainComponent\":\"WeatherComponent_mainComponent__mdLAj\",\"temp\":\"WeatherComponent_temp__24mw7\",\"bg\":\"WeatherComponent_bg__6dKOJ\"};","import LocalizedStrings from 'react-localization';\n\nconst message = new LocalizedStrings({\n  en: {\n    locale: 'en',\n    loading: \"Loading...\",\n    humidity: \"Humidity\",\n    feelsLike: \"Feels Like\",\n    wind: \"Wind\",\n    important: \"Important!\",\n    geolocationRequest: \"Grant location permission in your device to continue\",\n    geolocationDisabled: \"Geolocation is disabled in your device\",\n    //cardinals\n    north: \"North\",\n    northEast: \"Northeast\",\n    east: \"East\",\n    southEast: \"Southeast\",\n    south: \"South\",\n    southWest: \"Southwest\",\n    west: \"West\",\n    northwest: \"Northwest\",\n    station: \"Station\",\n    noPrecipitations: \"No precipitation expected\",\n    precipitations: (description, time) => `Expected ${description} at ${time}`\n  },\n  es: {\n    locale: 'es',\n    loading: \"Cargando...\",\n    humidity: \"Humedad\",\n    feelsLike: \"Sensación térmica\",\n    wind: \"Viento\",\n    important: \"¡Importante!\",\n    geolocationRequest: \"Para continuar conceda permisos de ubicación.\",\n    geolocationDisabled: \"La geolocalización se encuentra deshabilitada en su dispositivo\",\n    //cardinals\n    north: \"Norte\",\n    northEast: \"Noreste\",\n    east: \"Este\",\n    southEast: \"Sudeste\",\n    south: \"Sur\",\n    southWest: \"Sudoeste\",\n    west: \"Oeste\",\n    northwest: \"Noroeste\",\n    station: \"Estación\",\n    noPrecipitations: \"No se esperan precipitaciones\",\n    precipitations: (description, time) => `Se espera ${description} a las ${time}`\n  }\n});\n\nexport default message\n","import Axios from 'axios';\n\nexport default class Api {\n\n\tstatic OWM_API_ID = \"bb08096af050f2bd4c2b401249b14e27\";\n\tstatic URL = \"https://api.openweathermap.org/data/2.5\";\n\tstatic WEATHER = this.URL+\"/weather\";\n\tstatic FORECAST = this.URL+\"/forecast\";\n\tstatic IP_LOCATION = \"https://ipapi.co/json\"\n\n\tstatic baseParams = {\n\t\tappid: this.OWM_API_ID,\n\t\tunits: \"metric\",\n\t}\n\n\tstatic async getIpLocation() {\n\t\treturn await Axios.get(this.IP_LOCATION)\n\t\t\t.then(response => response.data);\n\t}\n\n\tstatic async getWeatherByCity(zipCode, countryCode, language) {\n\t\treturn await Axios.get(this.WEATHER, {\n\t\t\tparams: {\n\t\t\t\t...this.baseParams,\n\t\t\t\tq: `${zipCode},${countryCode}`,\n\t\t\t\tlang: language\n\t\t\t}\n\t\t}).then(response => response.data);\n\t}\n\n\tstatic async getWeatherByCoords(latitude, longitude, language) {\n\t\treturn await Axios.get(this.WEATHER, {\n\t\t\tparams: {\n\t\t\t\t...this.baseParams,\n\t\t\t\tlat: latitude,\n\t\t\t\tlon: longitude,\n\t\t\t\tlang: language\n\t\t\t}\n\t\t}).then(response => response.data);\n\t}\n\n\tstatic async getForecastByCity(zipCode, countryCode, language) {\n\t\treturn await Axios.get(this.FORECAST, {\n\t\t\tparams: {\n\t\t\t\t...this.baseParams,\n\t\t\t\tq: `${zipCode},${countryCode}`,\n\t\t\t\tlang: language\n\t\t\t}\n\t\t}).then(response => response.data);\n\t}\n\n\tstatic async getForecastByCoords(latitude, longitude, language) {\n\t\treturn await Axios.get(this.FORECAST, {\n\t\t\tparams: {\n\t\t\t\t...this.baseParams,\n\t\t\t\tlat: latitude,\n\t\t\t\tlon: longitude,\n\t\t\t\tlang: language\n\t\t\t}\n\t\t}).then(response => response.data);\n\t}\n}\n","export default __webpack_public_path__ + \"static/media/cloudy-sky-min.d8516944.jpg\";","export default __webpack_public_path__ + \"static/media/drizzle-min.ad372d4a.jpg\";","export default __webpack_public_path__ + \"static/media/drizzle-night-min.45216be3.jpg\";","export default __webpack_public_path__ + \"static/media/fog-min.42e6f289.jpg\";","export default __webpack_public_path__ + \"static/media/rainy-day-min.f8c28a9f.jpg\";","export default __webpack_public_path__ + \"static/media/snow-min.2ba5aee5.jpg\";","export default __webpack_public_path__ + \"static/media/storm-min.c85d9d6c.jpg\";","export default __webpack_public_path__ + \"static/media/sunny-min.5651a5a0.jpg\";","export default __webpack_public_path__ + \"static/media/covered-min.3135c1a6.jpg\";","export default __webpack_public_path__ + \"static/media/clear-sky-night-min.7891b1f4.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy-sky-night-min.3641cad9.jpg\";","export default __webpack_public_path__ + \"static/media/fog-night-min.8c04197d.jpg\";","export default __webpack_public_path__ + \"static/media/snow-night-min.661396c8.jpg\";","export default __webpack_public_path__ + \"static/media/covered-night-min.33216222.jpg\";","export default __webpack_public_path__ + \"static/media/rainy-night-min.ad153572.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy-sky.dbc3ce7b.jpg\";","export default __webpack_public_path__ + \"static/media/drizzle.9cdac81c.jpg\";","export default __webpack_public_path__ + \"static/media/drizzle-night.51696507.jpg\";","export default __webpack_public_path__ + \"static/media/fog.9a84ff24.jpg\";","export default __webpack_public_path__ + \"static/media/rainy-day.6b55c87c.jpg\";","export default __webpack_public_path__ + \"static/media/snow.8d5253ed.jpg\";","export default __webpack_public_path__ + \"static/media/storm.9648b46f.jpg\";","export default __webpack_public_path__ + \"static/media/sunny.f99420e2.jpg\";","export default __webpack_public_path__ + \"static/media/covered.3a9a56da.jpg\";","export default __webpack_public_path__ + \"static/media/clear-sky-night.0e27e654.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy-sky-night.8f63b02d.jpg\";","export default __webpack_public_path__ + \"static/media/fog-night.d917543e.jpg\";","export default __webpack_public_path__ + \"static/media/snow-night.397b7550.jpg\";","export default __webpack_public_path__ + \"static/media/covered-night.d8a4bd0c.jpg\";","export default __webpack_public_path__ + \"static/media/rainy-night.ec43470e.jpg\";","import message from '../localization/weather/WeatherLocal';\n\nexport const fix = (float, digits = 0) => parseFloat(float).toFixed(digits);\n\nexport const getLocalTime = (time) => {\n  const stringTime = new Date(time).toLocaleTimeString(\n      [], {hour: '2-digit', minute: '2-digit', hour12: false},\n  );\n  return stringTime.charAt(0) === '0' ? stringTime.substr(1) : stringTime;\n};\n\nexport const degreesToCardinal = (deg) => {\n  const cardinals = [\n    message.north,\n    message.northEast,\n    message.east,\n    message.southEast,\n    message.south,\n    message.southWest,\n    message.west,\n    message.northwest,\n    message.north,\n  ];\n\n  return cardinals[parseFloat((deg % 360) / 45).toFixed(0)];\n};\n\nexport const isDayTime = (weather) => {\n  const sunrise = weather.sys.sunrise * 1000;\n  const sunset = weather.sys.sunset * 1000;\n  const now = new Date().getTime();\n  return now > sunrise && now < sunset;\n};\n\nexport const min = (a, b) => (a <= b ? a : b);\n\nexport const classes = (...classes) => classes.join(' ');\n","import React from 'react';\n\nimport cloudyImgMin from '../../assets/cloudy-sky-min.jpg';\nimport drizzleImgMin from '../../assets/drizzle-min.jpg';\nimport drizzleNightImgMin from '../../assets/drizzle-night-min.jpg';\nimport fogImgMin from '../../assets/fog-min.jpg';\nimport rainyImgMin from '../../assets/rainy-day-min.jpg';\nimport snowImgMin from '../../assets/snow-min.jpg';\nimport stormImgMin from '../../assets/storm-min.jpg';\nimport sunnyImgMin from '../../assets/sunny-min.jpg';\nimport coveredImgMin from '../../assets/covered-min.jpg';\nimport clearSkyNightImgMin from '../../assets/clear-sky-night-min.jpg';\nimport cloudySkyNightImgMin from '../../assets/cloudy-sky-night-min.jpg';\nimport fogNightImgMin from '../../assets/fog-night-min.jpg';\nimport snowNightImgMin from '../../assets/snow-night-min.jpg';\nimport coveredNightImgMin from '../../assets/covered-night-min.jpg';\nimport rainyNightImgMin from '../../assets/rainy-night-min.jpg';\nimport cloudyImg from '../../assets/cloudy-sky.jpg';\nimport drizzleImg from '../../assets/drizzle.jpg';\nimport drizzleNightImg from '../../assets/drizzle-night.jpg';\nimport fogImg from '../../assets/fog.jpg';\nimport rainyImg from '../../assets/rainy-day.jpg';\nimport snowImg from '../../assets/snow.jpg';\nimport stormImg from '../../assets/storm.jpg';\nimport sunnyImg from '../../assets/sunny.jpg';\nimport coveredImg from '../../assets/covered.jpg';\nimport clearSkyNightImg from '../../assets/clear-sky-night.jpg';\nimport cloudySkyNightImg from '../../assets/cloudy-sky-night.jpg';\nimport fogNightImg from '../../assets/fog-night.jpg';\nimport snowNightImg from '../../assets/snow-night.jpg';\nimport coveredNightImg from '../../assets/covered-night.jpg';\nimport rainyNightImg from '../../assets/rainy-night.jpg';\n\nimport styles from './BackgroundImage.module.css';\nimport {classes, isDayTime} from '../Utils';\nimport {Weather} from \"../WeatherModel\";\n\nconst BackgroundImage = ({weather}) => {\n  const [image, setImage] = React.useState({min: '', full: ''});\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n\n  const isDayTimeWeather = React.useCallback(() => {\n    return isDayTime(weather);\n  }, [weather]);\n\n  const calculateImage = React.useCallback(() => {\n    if (!weather) return null;\n    const id = weather.weather[0].id;\n    const code = ('' + id)[0];\n    const day = isDayTimeWeather();\n\n    switch (code) {\n      case '2':\n        return {full: stormImg, min: stormImgMin};\n      case '3':\n        return day ? {full: drizzleImg, min: drizzleImgMin} : {full: drizzleNightImg, min: drizzleNightImgMin};\n      case '5':\n        return day ? {full: rainyImg, min: rainyImgMin} : {full: rainyNightImg, min: rainyNightImgMin};\n      case '6':\n        return day ? {full: snowImg, min: snowImgMin} : {full: snowNightImg, min: snowNightImgMin};\n      case '7':\n        return day ? {full: fogImg, min: fogImgMin} : {full: fogNightImg, min: fogNightImgMin};\n      case '8':\n        if (id === 800 || id === 801) {\n          return day ? {full: sunnyImg, min: sunnyImgMin} : {\n            full: clearSkyNightImg,\n            min: clearSkyNightImgMin,\n          };\n        }\n        if (id === 802 || id === 803) {\n          return day ? {\n            full: cloudyImg,\n            min: cloudyImgMin,\n          } : {full: cloudySkyNightImg, min: cloudySkyNightImgMin};\n        }\n        return day ? {full: coveredImg, min: coveredImgMin} : {full: coveredNightImg, min: coveredNightImgMin};\n      default:\n        return {full: cloudyImg, min: cloudyImgMin};\n    }\n  }, [isDayTimeWeather, weather]);\n\n\n  React.useEffect(() => {\n    setImage(calculateImage());\n  }, [calculateImage, weather]);\n\n  return (\n    <div className={styles.container}>\n      <img className={classes(styles.image, styles.thumb, imageLoaded ? styles.hidden : '')} src={image.min} alt=''/>\n      <img className={classes(styles.image, !imageLoaded ? styles.hidden : '')}\n           src={image.full} alt=''\n           onLoad={() => setImageLoaded(true)}\n      />\n    </div>\n  );\n};\n\nBackgroundImage.propTypes = {\n  weather: Weather,\n}\n\nexport default BackgroundImage;\n","import PropTypes from \"prop-types\";\n\nexport const Weather = PropTypes.shape({\n  name: PropTypes.string,\n  weather: PropTypes.array,\n  main: PropTypes.object,\n  wind: PropTypes.object,\n})\n\nexport const Forecast = PropTypes.shape({\n  list: PropTypes.array,\n})\n","import React from 'react'\nimport ReactAnimatedWeather from 'react-animated-weather';\nimport PropTypes, {number} from \"prop-types\";\nimport styles from \"./WeatherIcon.module.css\";\n\nconst WeatherIcon = ({isDayTime = true, weatherCode, ...props}) => {\n\n    const [icon, setIcon] = React.useState(null);\n\n    React.useEffect(() => {\n        if(weatherCode !== null && weatherCode !== undefined) {\n            const id = weatherCode.toString()[0];\n\n            switch (id) {\n                case '2':\n                case '5':\n                case '3':\n                    setIcon('RAIN')\n                    break;\n                case '6':\n                    if ([612, 613, 615].includes(weatherCode)) setIcon('SLEET')\n                    else setIcon('SNOW');\n                    break;\n                case '7':\n                    if ([771, 781].includes(weatherCode)) setIcon('WIND');\n                    else setIcon('FOG');\n                    break;\n                case '8':\n                    if ([800, 801].includes(weatherCode)) {\n                        if (isDayTime) setIcon('CLEAR_DAY')\n                        else setIcon('CLEAR_NIGHT');\n                    }\n                    if ([802, 803].includes(weatherCode)) {\n                        if (isDayTime) setIcon('PARTLY_CLOUDY_DAY')\n                        else setIcon('PARTLY_CLOUDY_NIGHT');\n                    }\n                    if (weatherCode === 804) setIcon('CLOUDY');\n                    break;\n\n                default:\n                    setIcon('PARTLY_CLOUDY_DAY')\n            }\n        }\n\n    }, [weatherCode, isDayTime])\n\n    return (\n        <div className={styles.container}>\n            {icon && <ReactAnimatedWeather id=\"canvas\"\n                icon={icon}\n                {...props}\n            />}\n        </div>\n    )\n}\n\nWeatherIcon.propTypes = {\n    isDayTime: PropTypes.bool,\n    weatherCode: number,\n}\n\nexport default WeatherIcon;\n","import React, {Fragment} from 'react';\nimport {fix, getLocalTime, isDayTime} from '../../Utils';\n\nimport styles from './TodayForecast.module.css';\nimport WeatherIcon from '../weatherIcon/WeatherIcon';\nimport {Weather} from \"../../WeatherModel\";\nimport PropTypes from \"prop-types\";\n\nconst TodayForecast = ({weather, forecasts}) => {\n  return (\n    <div className={styles.todayForecast}>\n      {forecasts.map((forecast) => (\n        <Fragment key={forecast.dt}>\n          <div className={styles.forecastContent}>\n            <div style={{display: 'flex', textAlign: 'center'}}>\n              <WeatherIcon\n                isDayTime={isDayTime(weather)}\n                weatherCode={forecast.weather[0].id}\n                size={30}\n                color=\"white\"\n              />\n              <span className={styles.temp}>\n                <strong>{fix(forecast.main.temp) + '°'}</strong>\n              </span>\n            </div>\n            <div>\n              <strong style={{fontSize: '9pt'}}>{getLocalTime(forecast.dt * 1000)}</strong>\n            </div>\n          </div>\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n\nTodayForecast.propTypes = {\n  weather: Weather,\n  forecasts: PropTypes.array,\n}\n\nexport default TodayForecast;\n","import React from 'react';\nimport message from '../../localization/weather/WeatherLocal';\n\nimport styles from './WeatherComponent.module.css';\nimport BackgroundImage from '../backgroundImage/BackgroundImage';\nimport {classes, degreesToCardinal, fix, getLocalTime, isDayTime, min} from '../Utils';\nimport TodayForecast from './todayForecast/TodayForecast';\nimport WeatherIcon from './weatherIcon/WeatherIcon';\nimport {Forecast, Weather} from \"../WeatherModel\";\n\nconst WeatherComponent = ({weather, forecast}) => {\n  const [todayForecast, setTodayForecast] = React.useState([]);\n  const [nextRain, setNextRain] = React.useState(null);\n\n  const tomorrow = () => {\n    const hours24 = new Date();\n    hours24.setHours(hours24.getHours()+24);\n\n    const tomorrowMorning = new Date();\n    tomorrowMorning.setHours(7, 0, 0, 0);\n    tomorrowMorning.setDate(tomorrowMorning.getDate() + 1);\n\n    return min(hours24, tomorrowMorning);\n  };\n\n  React.useEffect(() => {\n    if (forecast) {\n      const forecastForToday = forecast.list.filter((w) => w.dt * 1000 < tomorrow());\n      setTodayForecast(forecastForToday);\n      setNextRain(forecastForToday.find((f) => f.weather[0].main === 'Rain'));\n    }\n  }, [forecast]);\n\n  const nextRainMessage = (nextRainForecast) => {\n    return message.precipitations(nextRainForecast.weather[0].description, getLocalTime(nextRain.dt * 1000));\n  }\n\n  const dateTime = () => {\n    const options = { weekday: 'long', month: 'long', day: 'numeric' };\n    return new Date().toLocaleString(message.locale, options);\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.bg}>\n        <BackgroundImage weather={weather}/>\n      </div>\n\n\n      <div className={classes(styles.weatherComponent, styles.mainComponent)}>\n\n        <div className={styles.date}>{dateTime()}</div>\n\n        <div className={styles.currentWeather}>\n          <div className={classes(styles.item, styles.address)}>\n            {weather.name}\n          </div>\n\n          <div className={styles.description}>\n              <b>{weather.weather[0].description}</b>\n          </div>\n\n          <div className={styles.temp}>\n            <WeatherIcon\n              isDayTime={isDayTime(weather)}\n              weatherCode={weather.weather[0].id}\n              color=\"white\"\n            />\n            {fix(weather.main.temp) + '°C'}\n          </div>\n\n          <div className={styles.item}>\n              {message.feelsLike}: <strong>{fix(weather.main.feels_like) + 'º'}</strong>\n          </div>\n          <div className={styles.item}>\n              {message.humidity}: <strong>{fix(weather.main.humidity) + '%'}</strong>\n          </div>\n          <div className={styles.item}>\n              {message.wind}: <strong>{\n                fix(weather.wind.speed) + ' km/h ' + degreesToCardinal(weather.wind.deg)\n              }</strong>\n          </div>\n          {weather.weather[0].main !== 'Rain' && <div className={styles.item}>\n              <b>{nextRain ? nextRainMessage(nextRain) : message.noPrecipitations}</b>\n          </div>}\n        </div>\n        <div className={classes(styles.hideScrollbar, styles.forecastContainer)}>\n          <TodayForecast weather={weather} forecasts={todayForecast}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nWeatherComponent.propTypes = {\n  weather: Weather,\n  forecast: Forecast,\n};\n\nexport default WeatherComponent;\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport message from '../localization/weather/WeatherLocal';\nimport Api from '../api/Api';\nimport WeatherComponent from './weatherComponent/WeatherComponent';\nimport styles from './Weather.module.css'\n\nconst Weather = () => {\n  const [weather, setWeather] = React.useState(null);\n  const [forecast, setForecast] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [permission, setPermission] = React.useState('');\n\n  const Permission = {\n    PROMPT: 'prompt',\n    DENIED: 'denied',\n    GRANTED: 'granted',\n  };\n\n  const handlePermission = () => {\n    navigator.permissions.query({name: 'geolocation'}).then((result) => {\n      setPermission(result.state);\n      result.onchange = () => setPermission(result.state);\n    });\n  };\n\n  const getWeatherByCoords = (lat, lon) => {\n    Api.getWeatherByCoords(lat, lon, message.getLanguage())\n        .then((w) => setWeather(w))\n        .catch((e) => {\n          setError(e.message);\n          console.log(e);\n        });\n\n    Api.getForecastByCoords(lat, lon, message.getLanguage())\n        .then((forecast) => {\n          setForecast(forecast);\n        })\n        .catch((error) => {\n          setError(error.message);\n          console.log(error);\n        });\n  };\n\n  const populateByLocation = React.useCallback(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n          (position) => getWeatherByCoords(\n              position.coords.latitude,\n              position.coords.longitude,\n          ),\n      );\n    }\n  }, []);\n\n  React.useEffect(() => {\n    handlePermission();\n  }, []);\n\n  const populateByCity = React.useCallback(() => {\n    Api.getIpLocation().then((location) => {\n      getWeatherByCity(location.city, location.country_code);\n    }).catch((e) => {\n      if (permission !== Permission.PROMPT) {\n        setError(message.geolocationDisabled);\n        console.log(e);\n      }\n    });\n  }, [permission, Permission.PROMPT]);\n\n  const populate = React.useCallback(() => {\n    setError(null);\n\n    populateByLocation();\n\n    if (permission === Permission.DENIED ||\n      permission === Permission.PROMPT || !navigator.geolocation) {\n      populateByCity();\n    }\n  }, [populateByLocation, populateByCity, permission, Permission.DENIED, Permission.PROMPT]);\n\n  React.useEffect(() => {\n    if (permission !== '') populate();\n  }, [populate, permission]);\n\n\n  const getWeatherByCity = (city, countryCode) => {\n    Api.getWeatherByCity(city, countryCode, message.getLanguage())\n        .then((weather) => setWeather(weather))\n        .catch((error) => {\n          setError(error.message);\n          console.log(error);\n        });\n  };\n\n  const onFocus = () => {\n    populate();\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('focus', onFocus);\n\n    return () => {\n      window.removeEventListener('focus', onFocus);\n    };\n  });\n\n  return (\n    <div className={styles.container}>\n      {error && <Alert severity=\"error\">{error}</Alert>}\n      {!weather && permission === Permission.PROMPT && (\n        <Alert severity=\"info\">\n          <strong>{message.important}</strong>\n          {` ${message.geolocationRequest}`}\n        </Alert>\n      )}\n      {weather && <WeatherComponent weather={weather} forecast={forecast} />}\n\n      {!weather && permission !== Permission.DENIED &&\n      <div style={{display: 'flex', justifyContent: 'center', position: 'relative', top: '50%'}}>\n        <CircularProgress/>\n      </div>}\n\n    </div>\n  );\n};\n\nexport default Weather;\n","import LocalizedStrings from 'react-localization';\n\nconst local = new LocalizedStrings({\n\ten:{\n\t\tlang : \"en\",\n\t\ttitle : \"Open Weather\"\n\t},\n\tes: {\n\t\tlang : \"es\",\n\t\ttitle : \"Clima Libre\"\n\t}\n});\n\nexport default local;\n","import React from 'react';\nimport './App.css';\nimport Weather from \"./weather/Weather\";\nimport local from \"./localization/AppLocal\";\n\n\nfunction App() {\n  return (\n    <div className=\"app\" lang={local.lang}>\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}