{"version":3,"sources":["components/backgroundImage/BackgroundImage.module.css","components/weatherDetail/todayForecast/TodayForecast.module.css","components/weatherDetail/weatherIcon/WeatherIcon.module.css","components/Weather.module.css","components/weatherDetail/WeatherDetail.module.css","localization/weather/WeatherLocal.js","assets/cloudy-sky-min.jpg","assets/drizzle-min.jpg","assets/drizzle-night-min.jpg","assets/fog-min.jpg","assets/rainy-day-min.jpg","assets/snow-min.jpg","assets/storm-min.jpg","assets/sunny-min.jpg","assets/covered-min.jpg","assets/clear-sky-night-min.jpg","assets/cloudy-sky-night-min.jpg","assets/fog-night-min.jpg","assets/snow-night-min.jpg","assets/covered-night-min.jpg","assets/rainy-night-min.jpg","assets/cloudy-sky.jpg","assets/drizzle.jpg","assets/drizzle-night.jpg","assets/fog.jpg","assets/rainy-day.jpg","assets/snow.jpg","assets/storm.jpg","assets/sunny.jpg","assets/covered.jpg","assets/clear-sky-night.jpg","assets/cloudy-sky-night.jpg","assets/fog-night.jpg","assets/snow-night.jpg","assets/covered-night.jpg","assets/rainy-night.jpg","utils/Util.js","components/backgroundImage/BackgroundImage.js","components/WeatherModel.js","components/weatherDetail/weatherIcon/WeatherIcon.js","components/weatherDetail/todayForecast/TodayForecast.js","components/weatherDetail/WeatherDetail.js","services/weather.service.js","handlers/weather.handler.js","components/Weather.js","localization/AppLocal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","message","LocalizedStrings","en","locale","loading","humidity","feelsLike","wind","important","geolocationRequest","geolocationDisabled","north","northEast","east","southEast","south","southWest","west","northwest","station","noPrecipitations","precipitations","description","time","es","fix","float","digits","parseFloat","toFixed","getLocalTime","stringTime","Date","toLocaleTimeString","hour","minute","hour12","charAt","substr","isDayTime","weather","sunrise","sys","sunset","now","getTime","classes","join","BackgroundImage","PropTypes","shape","name","string","array","main","object","list","React","useState","min","full","image","setImage","imageLoaded","setImageLoaded","isDayTimeWeather","useCallback","calculateImage","id","code","day","stormImg","stormImgMin","drizzleImg","drizzleImgMin","drizzleNightImg","drizzleNightImgMin","rainyImg","rainyImgMin","rainyNightImg","rainyNightImgMin","snowImg","snowImgMin","snowNightImg","snowNightImgMin","fogImg","fogImgMin","fogNightImg","fogNightImgMin","sunnyImg","sunnyImgMin","clearSkyNightImg","clearSkyNightImgMin","cloudyImg","cloudyImgMin","cloudySkyNightImg","cloudySkyNightImgMin","coveredImg","coveredImgMin","coveredNightImg","coveredNightImgMin","useEffect","className","styles","container","thumb","hidden","src","alt","onLoad","WeatherIcon","weatherCode","props","icon","setIcon","undefined","toString","includes","TodayForecast","forecasts","map","forecast","content","firstRow","size","color","temp","style","fontSize","dt","WeatherDetail","todayForecast","setTodayForecast","nextRain","setNextRain","forecastForToday","filter","w","hours24","setHours","getHours","a","b","tomorrowMorning","setDate","getDate","tomorrow","find","f","nextRainForecast","deg","bg","weatherComponent","mainComponent","date","toLocaleString","weekday","month","currentWeather","item","address","feels_like","speed","length","hideScrollbar","URL","WEATHER","FORECAST","baseParams","appid","units","getIpLocation","axios","get","then","response","data","catch","error","console","log","getWeatherByCity","zipCode","countryCode","language","params","q","lang","getForecastByCity","getForecastByCoords","latitude","longitude","lat","lon","findByCoords","Promise","allSettled","getLanguage","Service","weatherResult","forecastResult","value","findByCity","city","Permission","EMPTY","PROMPT","DENIED","GRANTED","ERROR","Weather","setLoading","setWeather","setForecast","permission","setPermission","handlePermission","populate","navigator","permissions","query","result","state","onchange","_ignored","populateByLocation","resolve","reject","geolocation","getCurrentPosition","position","coords","populateByCity","location","country_code","onFocus","window","addEventListener","removeEventListener","Alert","severity","display","justifyContent","top","CircularProgress","local","title","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,UAAY,mCAAmC,MAAQ,+BAA+B,MAAQ,+BAA+B,OAAS,kC,mBCAxJD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,SAAW,gCAAgC,UAAY,iCAAiC,cAAgB,qCAAqC,YAAc,mCAAmC,KAAO,8B,mBCAhQD,EAAOC,QAAU,CAAC,UAAY,iC,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,6B,4DCA9BD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,iBAAmB,wCAAwC,YAAc,mCAAmC,cAAgB,qCAAqC,KAAO,4BAA4B,SAAW,gCAAgC,eAAiB,sCAAsC,KAAO,4BAA4B,QAAU,+BAA+B,cAAgB,qCAAqC,KAAO,4BAA4B,GAAK,4B,mKCgD/fC,EA/CC,IAAIC,IAAiB,CACnCC,GAAI,CACFC,OAAQ,KACRC,QAAS,aACTC,SAAU,WACVC,UAAW,aACXC,KAAM,OACNC,UAAW,aACXC,mBAAoB,uDACpBC,oBAAqB,yCAErBC,MAAO,QACPC,UAAW,YACXC,KAAM,OACNC,UAAW,YACXC,MAAO,QACPC,UAAW,YACXC,KAAM,OACNC,UAAW,YACXC,QAAS,UACTC,iBAAkB,6BAClBC,eAAgB,SAACC,EAAaC,GAAd,yBAAmCD,EAAnC,eAAqDC,KAEvEC,GAAI,CACFrB,OAAQ,KACRC,QAAS,cACTC,SAAU,UACVC,UAAW,0BACXC,KAAM,SACNC,UAAW,kBACXC,mBAAoB,mDACpBC,oBAAqB,qEAErBC,MAAO,QACPC,UAAW,UACXC,KAAM,OACNC,UAAW,UACXC,MAAO,MACPC,UAAW,WACXC,KAAM,QACNC,UAAW,WACXC,QAAS,cACTC,iBAAkB,gCAClBC,eAAgB,SAACC,EAAaC,GAAd,0BAAoCD,EAApC,kBAAyDC,O,gBC7C9D,MAA0B,2CCA1B,MAA0B,wCCA1B,MAA0B,8CCA1B,MAA0B,oCCA1B,MAA0B,0CCA1B,MAA0B,qCCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,wCCA1B,MAA0B,gDCA1B,MAA0B,iDCA1B,MAA0B,0CCA1B,MAA0B,2CCA1B,MAA0B,8CCA1B,MAA0B,4CCA1B,MAA0B,uCCA1B,MAA0B,oCCA1B,MAA0B,0CCA1B,MAA0B,gCCA1B,MAA0B,sCCA1B,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,oCCA1B,MAA0B,4CCA1B,MAA0B,6CCA1B,MAA0B,sCCA1B,MAA0B,uCCA1B,MAA0B,0CCA1B,MAA0B,wC,iBCE5BE,EAAM,SAACC,GAAD,IAAQC,EAAR,uDAAiB,EAAjB,OAAuBC,WAAWF,GAAOG,QAAQF,IAEvDG,EAAe,SAACP,GAC3B,IAAMQ,EAAa,IAAIC,KAAKT,GAAMU,mBAChC,GAAI,CAACC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,IAEnD,MAAgC,MAAzBL,EAAWM,OAAO,GAAaN,EAAWO,OAAO,GAAKP,GAmBlDQ,EAAY,SAACC,GACxB,IAAMC,EAAgC,IAAtBD,EAAQE,IAAID,QACtBE,EAA8B,IAArBH,EAAQE,IAAIC,OACrBC,GAAM,IAAIZ,MAAOa,UACvB,OAAOD,EAAMH,GAAWG,EAAMD,GAKnBG,GAAU,sCAAIA,EAAJ,yBAAIA,EAAJ,uBAAgBA,EAAQC,KAAK,M,mBCiErCC,ICnGQC,KAAUC,MAAM,CACrCC,KAAMF,KAAUG,OAChBZ,QAASS,KAAUI,MACnBC,KAAML,KAAUM,OAChBhD,KAAM0C,KAAUM,SAGMN,KAAUC,MAAM,CACtCM,KAAMP,KAAUI,QD2BM,SAAC,GAAe,IAAdb,EAAa,EAAbA,QAAa,EACXiB,IAAMC,SAAS,CAACC,IAAK,GAAIC,KAAM,KADpB,mBAC9BC,EAD8B,KACvBC,EADuB,OAECL,IAAMC,UAAS,GAFhB,mBAE9BK,EAF8B,KAEjBC,EAFiB,KAI/BC,EAAmBR,IAAMS,aAAY,WACzC,OAAO3B,EAAUC,KAChB,CAACA,IAEE2B,EAAiBV,IAAMS,aAAY,WACvC,IAAK1B,EAAS,OAAO,KACrB,IAAM4B,EAAK5B,EAAQA,QAAQ,GAAG4B,GACxBC,GAAQ,GAAKD,GAAI,GACjBE,EAAML,IAEZ,OAAQI,GACN,IAAK,IACH,MAAO,CAACT,KAAMW,EAAUZ,IAAKa,GAC/B,IAAK,IACH,OAAOF,EAAM,CAACV,KAAMa,EAAYd,IAAKe,GAAiB,CAACd,KAAMe,EAAiBhB,IAAKiB,GACrF,IAAK,IACH,OAAON,EAAM,CAACV,KAAMiB,EAAUlB,IAAKmB,GAAe,CAAClB,KAAMmB,EAAepB,IAAKqB,GAC/E,IAAK,IACH,OAAOV,EAAM,CAACV,KAAMqB,EAAStB,IAAKuB,GAAc,CAACtB,KAAMuB,EAAcxB,IAAKyB,GAC5E,IAAK,IACH,OAAOd,EAAM,CAACV,KAAMyB,EAAQ1B,IAAK2B,GAAa,CAAC1B,KAAM2B,EAAa5B,IAAK6B,GACzE,IAAK,IACH,OAAW,MAAPpB,GAAqB,MAAPA,EACTE,EAAM,CAACV,KAAM6B,EAAU9B,IAAK+B,GAAe,CAChD9B,KAAM+B,EACNhC,IAAKiC,GAGE,MAAPxB,GAAqB,MAAPA,EACTE,EAAM,CACXV,KAAMiC,EACNlC,IAAKmC,GACH,CAAClC,KAAMmC,EAAmBpC,IAAKqC,GAE9B1B,EAAM,CAACV,KAAMqC,EAAYtC,IAAKuC,GAAiB,CAACtC,KAAMuC,EAAiBxC,IAAKyC,GACrF,QACE,MAAO,CAACxC,KAAMiC,EAAWlC,IAAKmC,MAEjC,CAAC7B,EAAkBzB,IAOtB,OAJAiB,IAAM4C,WAAU,WACdvC,EAASK,OACR,CAACA,EAAgB3B,IAGlB,sBAAK8D,UAAWC,IAAOC,UAAvB,UACE,qBAAKF,UAAWxD,GAAQyD,IAAO1C,MAAO0C,IAAOE,MAAO1C,EAAcwC,IAAOG,OAAS,IAAKC,IAAK9C,EAAMF,IAAKiD,IAAI,KAC3G,qBAAKN,UAAWxD,GAAQyD,IAAO1C,MAAQE,EAA8B,GAAhBwC,IAAOG,QAC1DC,IAAK9C,EAAMD,KAAMgD,IAAI,GACrBC,OAAQ,kBAAM7C,GAAe,W,8EEhCtB8C,GAtDK,SAAC,GAA+C,IAAD,IAA7CvE,iBAA6C,SAA3BwE,EAA2B,EAA3BA,YAAgBC,EAAW,8CACzCvD,IAAMC,SAAS,MAD0B,mBAC1DuD,EAD0D,KACpDC,EADoD,KAuCjE,OApCAzD,IAAM4C,WAAU,WACd,GAAoB,OAAhBU,QAAwCI,IAAhBJ,EAG1B,OAFWA,EAAYK,WAAW,IAGhC,IAAK,IACL,IAAK,IACL,IAAK,IACHF,EAAQ,QACR,MACF,IAAK,IACC,CAAC,IAAK,IAAK,KAAKG,SAASN,GAAcG,EAAQ,SAC9CA,EAAQ,QACb,MACF,IAAK,IACC,CAAC,IAAK,KAAKG,SAASN,GAAcG,EAAQ,QACzCA,EAAQ,OACb,MACF,IAAK,IACC,CAAC,IAAK,KAAKG,SAASN,IACPG,EAAX3E,EAAmB,YACV,eAEX,CAAC,IAAK,KAAK8E,SAASN,IACPG,EAAX3E,EAAmB,oBACV,uBAEK,MAAhBwE,GAAqBG,EAAQ,UACjC,MAEF,QACEA,EAAQ,wBAGb,CAACH,EAAaxE,IAGf,qBAAK+D,UAAWC,KAAOC,UAAvB,SACGS,GAAQ,cAAC,KAAD,cAAsB7C,GAAG,SAChC6C,KAAMA,GACFD,OCRGM,GAhCO,SAAC,GAA0B,IAAzB9E,EAAwB,EAAxBA,QAAS+E,EAAe,EAAfA,UAC/B,OACE,qBAAKjB,UAAWC,KAAOC,UAAvB,SACGe,EAAUC,KAAI,SAACC,GAAD,OACb,cAAC,WAAD,UACE,sBAAKnB,UAAWC,KAAOmB,QAAvB,UACE,sBAAKpB,UAAWC,KAAOoB,SAAvB,UACE,cAAC,GAAD,CACEpF,UAAWA,EAAUC,GACrBuE,YAAaU,EAASjF,QAAQ,GAAG4B,GACjCwD,KAAM,GACNC,MAAM,UAER,sBAAMvB,UAAWC,KAAOuB,KAAxB,SACE,iCAASrG,EAAIgG,EAASnE,KAAKwE,MAAQ,cAGvC,8BACE,wBAAQC,MAAO,CAACC,SAAU,OAA1B,SAAmClG,EAA2B,IAAd2F,EAASQ,YAdhDR,EAASQ,UCuFjBC,GAzFO,SAAC,GAAyB,IAAxB1F,EAAuB,EAAvBA,QAASiF,EAAc,EAAdA,SAAc,EACHhE,IAAMC,SAAS,IADZ,mBACtCyE,EADsC,KACvBC,EADuB,OAEb3E,IAAMC,SAAS,MAFF,mBAEtC2E,EAFsC,KAE5BC,EAF4B,KAe7C7E,IAAM4C,WAAU,WACd,GAAIoB,EAAU,CACZ,IAAMc,EAAmBd,EAASjE,KAAKgF,QAAO,SAACC,GAAD,OAAc,IAAPA,EAAER,GAb1C,WACf,IAAMS,EAAU,IAAI1G,KACpB0G,EAAQC,SAASD,EAAQE,WAAW,IAEpC,ILgBgBC,EAAGC,EKhBbC,EAAkB,IAAI/G,KAI5B,OAHA+G,EAAgBJ,SAAS,EAAG,EAAG,EAAG,GAClCI,EAAgBC,QAAQD,EAAgBE,UAAY,ILcpCJ,EKZLH,KLYQI,EKZCC,GLYeF,EAAIC,EKP8BI,MACnEd,EAAiBG,GACjBD,EAAYC,EAAiBY,MAAK,SAACC,GAAD,MAA6B,SAAtBA,EAAE5G,QAAQ,GAAGc,YAEvD,CAACmE,IAEJ,IAAyB4B,ELtBOC,EK+BhC,OACE,sBAAKhD,UAAWC,IAAOC,UAAvB,UACE,qBAAKF,UAAWC,IAAOgD,GAAvB,SACE,cAAC,GAAD,CAAiB/G,QAASA,MAI5B,sBAAK8D,UAAWxD,GAAQyD,IAAOiD,iBAAkBjD,IAAOkD,eAAxD,UAEE,qBAAKnD,UAAWC,IAAOmD,KAAvB,UAZG,IAAI1H,MAAO2H,eAAe3J,EAAQG,OADzB,CAACyJ,QAAS,OAAQC,MAAO,OAAQvF,IAAK,cAelD,sBAAKgC,UAAWC,IAAOuD,eAAvB,UACE,qBAAKxD,UAAWxD,GAAQyD,IAAOwD,KAAMxD,IAAOyD,SAA5C,SACGxH,EAAQW,OAGX,qBAAKmD,UAAWC,IAAOjF,YAAvB,SACE,4BAAIkB,EAAQA,QAAQ,GAAGlB,gBAGzB,sBAAKgF,UAAWC,IAAOuB,KAAvB,UACE,cAAC,GAAD,CACEvF,UAAWA,EAAUC,GACrBuE,YAAavE,EAAQA,QAAQ,GAAG4B,GAChCyD,MAAM,UAEPpG,EAAIe,EAAQc,KAAKwE,MAAQ,WAG5B,sBAAKxB,UAAWC,IAAOwD,KAAvB,UACG/J,EAAQM,UADX,KACuB,iCAASmB,EAAIe,EAAQc,KAAK2G,YAAc,YAE/D,sBAAK3D,UAAWC,IAAOwD,KAAvB,UACG/J,EAAQK,SADX,KACsB,iCAASoB,EAAIe,EAAQc,KAAKjD,UAAY,SAE5D,sBAAKiG,UAAWC,IAAOwD,KAAvB,UACG/J,EAAQO,KADX,KACkB,iCACdkB,EAAIe,EAAQjC,KAAK2J,OAAS,ULpENZ,EKoEmC9G,EAAQjC,KAAK+I,ILnE9D,CAChBtJ,EAAQW,MACRX,EAAQY,UACRZ,EAAQa,KACRb,EAAQc,UACRd,EAAQe,MACRf,EAAQgB,UACRhB,EAAQiB,KACRjB,EAAQkB,UACRlB,EAAQW,OAGOiB,WAAY0H,EAAM,IAAO,IAAIzH,QAAQ,UK0DjB,SAA5BW,EAAQA,QAAQ,GAAGc,MAAmB6E,EAAcgC,OAAS,GAAK,qBAAK7D,UAAWC,IAAOwD,KAAvB,SACjE,4BAAI1B,GAlDWgB,EAkDgBhB,EAjDhCrI,EAAQqB,eAAegI,EAAiB7G,QAAQ,GAAGlB,YAAaQ,EAA2B,IAAduG,EAASJ,MAiD1CjI,EAAQoB,wBAGvD,qBAAKkF,UAAWxD,GAAQyD,IAAO6D,cAAe7D,IAAOkB,UAArD,SACE,cAAC,GAAD,CAAejF,QAASA,EAAS+E,UAAWY,a,wCCrFhDkC,GAAM,0CACNC,GAAUD,GAAM,WAChBE,GAAWF,GAAM,YAGjBG,GAAa,CACjBC,MAAO,mCACPC,MAAO,UAGIC,GAAgB,WAC3B,OAAOC,KAAMC,IARK,yBASfC,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAILG,GAAmB,SAACC,EAASC,EAAaC,GACrD,OAAOZ,KAAMC,IAAIP,GAAS,CACxBmB,OAAO,6BACFjB,IADC,IAEJkB,EAAE,GAAD,OAAKJ,EAAL,YAAgBC,GACjBI,KAAMH,MAEPV,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAkBLU,GAAoB,SAACN,EAASC,EAAaC,GACtD,OAAOZ,KAAMC,IAAIN,GAAU,CACzBkB,OAAO,6BACFjB,IADC,IAEJkB,EAAE,GAAD,OAAKJ,EAAL,YAAgBC,GACjBI,KAAMH,MAEPV,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAILW,GAAsB,SAACC,EAAUC,EAAWP,GACvD,OAAOZ,KAAMC,IAAIN,GAAU,CACzBkB,OAAO,6BACFjB,IADC,IAEJwB,IAAKF,EACLG,IAAKF,EACLJ,KAAMH,MAEPV,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OCnELgB,GAAY,uCAAG,WAAOF,EAAKC,GAAZ,qBAAApD,EAAA,sEACoBsD,QAAQC,WAAW,ED6BhCN,EC5BJE,ED4BcD,EC5BTE,ED4BoBT,EC5BfxL,EAAQqM,cD6BxCzB,KAAMC,IAAIP,GAAS,CACxBmB,OAAO,6BACFjB,IADC,IAEJwB,IAAKF,EACLG,IAAKF,EACLJ,KAAMH,MAEPV,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OCrCdoB,GAA4BN,EAAKC,EAAKjM,EAAQqM,iBAHtB,0CACnBE,EADmB,KACJC,EADI,uBAMnB,CAAChK,QAAS+J,EAAcE,MAAOhF,SAAU+E,EAAeC,QANrC,iCD8BM,IAACX,EAAUC,EAAWP,IC9B5B,OAAH,wDAcZkB,GAAU,uCAAG,WAAOC,EAAMpB,GAAb,qBAAA1C,EAAA,sEACDyD,KADC,mDAGwBH,QAAQC,WAAW,CAC/DE,GAAyBK,EAAMpB,EAAavL,EAAQqM,eACpDC,GAA0BK,EAAMpB,EAAavL,EAAQqM,iBALjC,0CAGfE,EAHe,KAGAC,EAHA,uBAQf,CAAChK,QAAS+J,EAAcE,MAAOhF,SAAU+E,EAAeC,QARzC,4CAAH,wDC6FjBG,GAAa,CACjBC,MAAO,GACPC,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,MAAO,SAGMC,GA7GC,WAAO,IAAD,EACUzJ,IAAMC,UAAS,GADzB,mBACbtD,EADa,KACJ+M,EADI,OAEU1J,IAAMC,SAAS,MAFzB,mBAEblB,EAFa,KAEJ4K,EAFI,OAGY3J,IAAMC,SAAS,MAH3B,mBAGb+D,EAHa,KAGH4F,EAHG,OAIgB5J,IAAMC,SAASkJ,GAAWC,OAJ1C,mBAIbS,EAJa,KAIDC,EAJC,KAMpB9J,IAAM4C,WAAU,WACdmH,MACC,IAEH/J,IAAM4C,WAAW,WACfoH,IAAW3C,SACV,CAACwC,IAEJ,IAAME,EAAmB,WACvB,IACEE,UAAUC,YAAYC,MAAM,CAACzK,KAAM,gBAChC2H,MAAK,SAAC+C,GACLN,EAAcM,EAAOC,OACrBD,EAAOE,SAAW,WAChBR,EAAcM,EAAOC,WAG3B,MAAOE,GACPT,EAAcX,GAAWK,SAIvBgB,EAAkB,uCAAG,8BAAApF,EAAA,sEDzBI,IAAIsD,SAAQ,SAAS+B,EAASC,GAC7DT,UAAUU,YAAYC,mBAAmBH,EAASC,MCwBvB,YACnBG,EADmB,wCAIDpC,GAAaoC,EAASC,OAAOzC,SAAUwC,EAASC,OAAOxC,WAJtD,OAIjBvJ,EAJiB,OAKvB4K,EAAW5K,EAAQA,SACnB6K,EAAY7K,EAAQiF,UANG,2CAAH,qDAWlB+G,EAAc,uCAAG,8BAAA3F,EAAA,sEACE8B,KADF,YACf8D,EADe,wCAGG/B,GAAW+B,EAAS9B,KAAM8B,EAASC,cAHtC,OAGblM,EAHa,OAInB4K,EAAW5K,EAAQA,SACnB6K,EAAY7K,EAAQiF,UALD,2CAAH,qDASdgG,EAAQ,uCAAG,sBAAA5E,EAAA,yDACXyE,IAAeV,GAAWI,QADf,gCAEPiB,IAFO,UAKXX,IAAeV,GAAWE,OALf,gCAMP0B,IANO,uBAOPP,IAPO,UAUXX,IAAeV,GAAWG,QAAUO,IAAeV,GAAWK,MAVnD,kCAWPuB,IAXO,QAcXlB,IAAeV,GAAWC,OAC5BM,GAAW,GAfE,4CAAH,qDAoBRwB,EAAU,WACdlB,IAAW3C,QAWb,OARArH,IAAM4C,WAAU,WAGd,OAFAuI,OAAOC,iBAAiB,QAASF,GAE1B,WACLC,OAAOE,oBAAoB,QAASH,OAKtC,sBAAKrI,UAAWC,KAAOC,UAAvB,WACIhE,IAAYpC,GAAWkN,IAAeV,GAAWG,QACjD,cAACgC,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBhP,EAAQU,uBAEjC8B,IAAYpC,GAAWkN,IAAeV,GAAWE,QACjD,eAACiC,EAAA,EAAD,CAAOC,SAAS,OAAhB,UACE,iCAAShP,EAAQQ,YADnB,WAEOR,EAAQS,uBAGhB+B,GAAW,cAAC,GAAD,CAAeA,QAASA,EAASiF,SAAUA,KAErDjF,GAAW,qBAAKuF,MAAO,CAACkH,QAAS,OAAQC,eAAgB,SAAUZ,SAAU,WAAYa,IAAK,OAAnF,SACX,cAACC,EAAA,EAAD,UC1FOC,GAXD,IAAIpP,IAAiB,CACjCC,GAAI,CACFyL,KAAM,KACN2D,MAAO,gBAET9N,GAAI,CACFmK,KAAM,KACN2D,MAAO,iBCKIC,OARf,WACE,OACE,qBAAKjJ,UAAU,MAAMqF,KAAM0D,GAAM1D,KAAjC,SACE,cAAC,GAAD,OCIc6D,QACW,cAA7BZ,OAAOH,SAASgB,UAEe,UAA7Bb,OAAOH,SAASgB,UAEhBb,OAAOH,SAASgB,SAASC,MACvB,2D,MCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBrC,WACrBA,UAAUsC,cAAcC,MACrBnF,MAAK,SAAAoF,GACJA,EAAaC,gBAEdlF,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMlL,c","file":"static/js/main.20611a8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BackgroundImage_container__2bOs5\",\"image\":\"BackgroundImage_image__2mgB4\",\"thumb\":\"BackgroundImage_thumb__1IYvo\",\"hidden\":\"BackgroundImage_hidden__3fwe7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"TodayForecast_content__IQ3kG\",\"firstRow\":\"TodayForecast_firstRow__GoWvS\",\"container\":\"TodayForecast_container__GjUuR\",\"forecastTitle\":\"TodayForecast_forecastTitle__1cDHQ\",\"extraShadow\":\"TodayForecast_extraShadow__2WK2-\",\"temp\":\"TodayForecast_temp__16rp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WeatherIcon_container__3C6nD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Weather_container__2Hl-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WeatherDetail_container__1IxEv\",\"weatherComponent\":\"WeatherDetail_weatherComponent__1Kb1W\",\"description\":\"WeatherDetail_description__kanKJ\",\"hideScrollbar\":\"WeatherDetail_hideScrollbar__2YBJh\",\"date\":\"WeatherDetail_date__CT4FV\",\"forecast\":\"WeatherDetail_forecast__3JO7V\",\"currentWeather\":\"WeatherDetail_currentWeather__3R0sj\",\"item\":\"WeatherDetail_item__3-wi2\",\"address\":\"WeatherDetail_address__Z3P-l\",\"mainComponent\":\"WeatherDetail_mainComponent__3XVnn\",\"temp\":\"WeatherDetail_temp__26JdA\",\"bg\":\"WeatherDetail_bg__1sNNk\"};","import LocalizedStrings from 'react-localization';\n\nconst message = new LocalizedStrings({\n  en: {\n    locale: 'en',\n    loading: 'Loading...',\n    humidity: 'Humidity',\n    feelsLike: 'Feels Like',\n    wind: 'Wind',\n    important: 'Important!',\n    geolocationRequest: 'Grant location permission in your device to continue',\n    geolocationDisabled: 'Geolocation is disabled in your device',\n    // cardinals\n    north: 'North',\n    northEast: 'Northeast',\n    east: 'East',\n    southEast: 'Southeast',\n    south: 'South',\n    southWest: 'Southwest',\n    west: 'West',\n    northwest: 'Northwest',\n    station: 'Station',\n    noPrecipitations: 'No precipitations expected',\n    precipitations: (description, time) => `Expected ${description} at ${time}`\n  },\n  es: {\n    locale: 'es',\n    loading: 'Cargando...',\n    humidity: 'Humedad',\n    feelsLike: 'Sensación térmica',\n    wind: 'Viento',\n    important: '¡Importante!',\n    geolocationRequest: 'Para continuar conceda permisos de ubicación.',\n    geolocationDisabled: 'La geolocalización se encuentra deshabilitada en su dispositivo',\n    // cardinals\n    north: 'Norte',\n    northEast: 'Noreste',\n    east: 'Este',\n    southEast: 'Sudeste',\n    south: 'Sur',\n    southWest: 'Sudoeste',\n    west: 'Oeste',\n    northwest: 'Noroeste',\n    station: 'Estación',\n    noPrecipitations: 'No se esperan precipitaciones',\n    precipitations: (description, time) => `Se espera ${description} a las ${time}`\n  }\n});\n\nexport default message;\n","export default __webpack_public_path__ + \"static/media/cloudy-sky-min.d8516944.jpg\";","export default __webpack_public_path__ + \"static/media/drizzle-min.ad372d4a.jpg\";","export default __webpack_public_path__ + \"static/media/drizzle-night-min.45216be3.jpg\";","export default __webpack_public_path__ + \"static/media/fog-min.42e6f289.jpg\";","export default __webpack_public_path__ + \"static/media/rainy-day-min.f8c28a9f.jpg\";","export default __webpack_public_path__ + \"static/media/snow-min.2ba5aee5.jpg\";","export default __webpack_public_path__ + \"static/media/storm-min.c85d9d6c.jpg\";","export default __webpack_public_path__ + \"static/media/sunny-min.5651a5a0.jpg\";","export default __webpack_public_path__ + \"static/media/covered-min.3135c1a6.jpg\";","export default __webpack_public_path__ + \"static/media/clear-sky-night-min.7891b1f4.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy-sky-night-min.3641cad9.jpg\";","export default __webpack_public_path__ + \"static/media/fog-night-min.8c04197d.jpg\";","export default __webpack_public_path__ + \"static/media/snow-night-min.661396c8.jpg\";","export default __webpack_public_path__ + \"static/media/covered-night-min.33216222.jpg\";","export default __webpack_public_path__ + \"static/media/rainy-night-min.ad153572.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy-sky.dbc3ce7b.jpg\";","export default __webpack_public_path__ + \"static/media/drizzle.9cdac81c.jpg\";","export default __webpack_public_path__ + \"static/media/drizzle-night.51696507.jpg\";","export default __webpack_public_path__ + \"static/media/fog.9a84ff24.jpg\";","export default __webpack_public_path__ + \"static/media/rainy-day.6b55c87c.jpg\";","export default __webpack_public_path__ + \"static/media/snow.8d5253ed.jpg\";","export default __webpack_public_path__ + \"static/media/storm.9648b46f.jpg\";","export default __webpack_public_path__ + \"static/media/sunny.f99420e2.jpg\";","export default __webpack_public_path__ + \"static/media/covered.3a9a56da.jpg\";","export default __webpack_public_path__ + \"static/media/clear-sky-night.0e27e654.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy-sky-night.8f63b02d.jpg\";","export default __webpack_public_path__ + \"static/media/fog-night.d917543e.jpg\";","export default __webpack_public_path__ + \"static/media/snow-night.397b7550.jpg\";","export default __webpack_public_path__ + \"static/media/covered-night.d8a4bd0c.jpg\";","export default __webpack_public_path__ + \"static/media/rainy-night.ec43470e.jpg\";","import message from '../localization/weather/WeatherLocal';\n\nexport const fix = (float, digits = 0) => parseFloat(float).toFixed(digits);\n\nexport const getLocalTime = (time) => {\n  const stringTime = new Date(time).toLocaleTimeString(\n    [], {hour: '2-digit', minute: '2-digit', hour12: false}\n  );\n  return stringTime.charAt(0) === '0' ? stringTime.substr(1) : stringTime;\n};\n\nexport const degreesToCardinal = (deg) => {\n  const cardinals = [\n    message.north,\n    message.northEast,\n    message.east,\n    message.southEast,\n    message.south,\n    message.southWest,\n    message.west,\n    message.northwest,\n    message.north\n  ];\n\n  return cardinals[parseFloat((deg % 360) / 45).toFixed(0)];\n};\n\nexport const isDayTime = (weather) => {\n  const sunrise = weather.sys.sunrise * 1000;\n  const sunset = weather.sys.sunset * 1000;\n  const now = new Date().getTime();\n  return now > sunrise && now < sunset;\n};\n\nexport const min = (a, b) => (a <= b ? a : b);\n\nexport const classes = (...classes) => classes.join(' ');\n","import React from 'react';\n\nimport cloudyImgMin from '../../assets/cloudy-sky-min.jpg';\nimport drizzleImgMin from '../../assets/drizzle-min.jpg';\nimport drizzleNightImgMin from '../../assets/drizzle-night-min.jpg';\nimport fogImgMin from '../../assets/fog-min.jpg';\nimport rainyImgMin from '../../assets/rainy-day-min.jpg';\nimport snowImgMin from '../../assets/snow-min.jpg';\nimport stormImgMin from '../../assets/storm-min.jpg';\nimport sunnyImgMin from '../../assets/sunny-min.jpg';\nimport coveredImgMin from '../../assets/covered-min.jpg';\nimport clearSkyNightImgMin from '../../assets/clear-sky-night-min.jpg';\nimport cloudySkyNightImgMin from '../../assets/cloudy-sky-night-min.jpg';\nimport fogNightImgMin from '../../assets/fog-night-min.jpg';\nimport snowNightImgMin from '../../assets/snow-night-min.jpg';\nimport coveredNightImgMin from '../../assets/covered-night-min.jpg';\nimport rainyNightImgMin from '../../assets/rainy-night-min.jpg';\nimport cloudyImg from '../../assets/cloudy-sky.jpg';\nimport drizzleImg from '../../assets/drizzle.jpg';\nimport drizzleNightImg from '../../assets/drizzle-night.jpg';\nimport fogImg from '../../assets/fog.jpg';\nimport rainyImg from '../../assets/rainy-day.jpg';\nimport snowImg from '../../assets/snow.jpg';\nimport stormImg from '../../assets/storm.jpg';\nimport sunnyImg from '../../assets/sunny.jpg';\nimport coveredImg from '../../assets/covered.jpg';\nimport clearSkyNightImg from '../../assets/clear-sky-night.jpg';\nimport cloudySkyNightImg from '../../assets/cloudy-sky-night.jpg';\nimport fogNightImg from '../../assets/fog-night.jpg';\nimport snowNightImg from '../../assets/snow-night.jpg';\nimport coveredNightImg from '../../assets/covered-night.jpg';\nimport rainyNightImg from '../../assets/rainy-night.jpg';\n\nimport styles from './BackgroundImage.module.css';\nimport {classes, isDayTime} from '../../utils/Util';\nimport {Weather} from '../WeatherModel';\n\nconst BackgroundImage = ({weather}) => {\n  const [image, setImage] = React.useState({min: '', full: ''});\n  const [imageLoaded, setImageLoaded] = React.useState(false);\n\n  const isDayTimeWeather = React.useCallback(() => {\n    return isDayTime(weather);\n  }, [weather]);\n\n  const calculateImage = React.useCallback(() => {\n    if (!weather) return null;\n    const id = weather.weather[0].id;\n    const code = ('' + id)[0];\n    const day = isDayTimeWeather();\n\n    switch (code) {\n      case '2':\n        return {full: stormImg, min: stormImgMin};\n      case '3':\n        return day ? {full: drizzleImg, min: drizzleImgMin} : {full: drizzleNightImg, min: drizzleNightImgMin};\n      case '5':\n        return day ? {full: rainyImg, min: rainyImgMin} : {full: rainyNightImg, min: rainyNightImgMin};\n      case '6':\n        return day ? {full: snowImg, min: snowImgMin} : {full: snowNightImg, min: snowNightImgMin};\n      case '7':\n        return day ? {full: fogImg, min: fogImgMin} : {full: fogNightImg, min: fogNightImgMin};\n      case '8':\n        if (id === 800 || id === 801) {\n          return day ? {full: sunnyImg, min: sunnyImgMin} : {\n            full: clearSkyNightImg,\n            min: clearSkyNightImgMin\n          };\n        }\n        if (id === 802 || id === 803) {\n          return day ? {\n            full: cloudyImg,\n            min: cloudyImgMin\n          } : {full: cloudySkyNightImg, min: cloudySkyNightImgMin};\n        }\n        return day ? {full: coveredImg, min: coveredImgMin} : {full: coveredNightImg, min: coveredNightImgMin};\n      default:\n        return {full: cloudyImg, min: cloudyImgMin};\n    }\n  }, [isDayTimeWeather, weather]);\n\n\n  React.useEffect(() => {\n    setImage(calculateImage());\n  }, [calculateImage, weather]);\n\n  return (\n    <div className={styles.container}>\n      <img className={classes(styles.image, styles.thumb, imageLoaded ? styles.hidden : '')} src={image.min} alt=''/>\n      <img className={classes(styles.image, !imageLoaded ? styles.hidden : '')}\n        src={image.full} alt=''\n        onLoad={() => setImageLoaded(true)}\n      />\n    </div>\n  );\n};\n\nBackgroundImage.propTypes = {\n  weather: Weather\n};\n\nexport default BackgroundImage;\n","import PropTypes from 'prop-types';\n\nexport const Weather = PropTypes.shape({\n  name: PropTypes.string,\n  weather: PropTypes.array,\n  main: PropTypes.object,\n  wind: PropTypes.object\n});\n\nexport const Forecast = PropTypes.shape({\n  list: PropTypes.array\n});\n","import React from 'react';\nimport ReactAnimatedWeather from 'react-animated-weather';\nimport PropTypes, {number} from 'prop-types';\nimport styles from './WeatherIcon.module.css';\n\nconst WeatherIcon = ({isDayTime = true, weatherCode, ...props}) => {\n  const [icon, setIcon] = React.useState(null);\n\n  React.useEffect(() => {\n    if (weatherCode !== null && weatherCode !== undefined) {\n      const id = weatherCode.toString()[0];\n\n      switch (id) {\n        case '2':\n        case '5':\n        case '3':\n          setIcon('RAIN');\n          break;\n        case '6':\n          if ([612, 613, 615].includes(weatherCode)) setIcon('SLEET');\n          else setIcon('SNOW');\n          break;\n        case '7':\n          if ([771, 781].includes(weatherCode)) setIcon('WIND');\n          else setIcon('FOG');\n          break;\n        case '8':\n          if ([800, 801].includes(weatherCode)) {\n            if (isDayTime) setIcon('CLEAR_DAY');\n            else setIcon('CLEAR_NIGHT');\n          }\n          if ([802, 803].includes(weatherCode)) {\n            if (isDayTime) setIcon('PARTLY_CLOUDY_DAY');\n            else setIcon('PARTLY_CLOUDY_NIGHT');\n          }\n          if (weatherCode === 804) setIcon('CLOUDY');\n          break;\n\n        default:\n          setIcon('PARTLY_CLOUDY_DAY');\n      }\n    }\n  }, [weatherCode, isDayTime]);\n\n  return (\n    <div className={styles.container}>\n      {icon && <ReactAnimatedWeather id=\"canvas\"\n        icon={icon}\n        {...props}\n      />}\n    </div>\n  );\n};\n\nWeatherIcon.propTypes = {\n  isDayTime: PropTypes.bool,\n  weatherCode: number\n};\n\nexport default WeatherIcon;\n","import React, {Fragment} from 'react';\nimport {fix, getLocalTime, isDayTime} from '../../../utils/Util';\n\nimport styles from './TodayForecast.module.css';\nimport WeatherIcon from '../weatherIcon/WeatherIcon';\nimport {Weather} from '../../WeatherModel';\nimport PropTypes from 'prop-types';\n\nconst TodayForecast = ({weather, forecasts}) => {\n  return (\n    <div className={styles.container}>\n      {forecasts.map((forecast) => (\n        <Fragment key={forecast.dt}>\n          <div className={styles.content}>\n            <div className={styles.firstRow}>\n              <WeatherIcon\n                isDayTime={isDayTime(weather)}\n                weatherCode={forecast.weather[0].id}\n                size={30}\n                color=\"white\"\n              />\n              <span className={styles.temp}>\n                <strong>{fix(forecast.main.temp) + '°'}</strong>\n              </span>\n            </div>\n            <div>\n              <strong style={{fontSize: '9pt'}}>{getLocalTime(forecast.dt * 1000)}</strong>\n            </div>\n          </div>\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n\nTodayForecast.propTypes = {\n  weather: Weather,\n  forecasts: PropTypes.array\n};\n\nexport default TodayForecast;\n","import React from 'react';\nimport message from '../../localization/weather/WeatherLocal';\n\nimport styles from './WeatherDetail.module.css';\nimport BackgroundImage from '../backgroundImage/BackgroundImage';\nimport {classes, degreesToCardinal, fix, getLocalTime, isDayTime, min} from '../../utils/Util';\nimport TodayForecast from './todayForecast/TodayForecast';\nimport WeatherIcon from './weatherIcon/WeatherIcon';\nimport {Forecast, Weather} from '../WeatherModel';\n\nconst WeatherDetail = ({weather, forecast}) => {\n  const [todayForecast, setTodayForecast] = React.useState([]);\n  const [nextRain, setNextRain] = React.useState(null);\n\n  const tomorrow = () => {\n    const hours24 = new Date();\n    hours24.setHours(hours24.getHours()+24);\n\n    const tomorrowMorning = new Date();\n    tomorrowMorning.setHours(7, 0, 0, 0);\n    tomorrowMorning.setDate(tomorrowMorning.getDate() + 1);\n\n    return min(hours24, tomorrowMorning);\n  };\n\n  React.useEffect(() => {\n    if (forecast) {\n      const forecastForToday = forecast.list.filter((w) => w.dt * 1000 < tomorrow());\n      setTodayForecast(forecastForToday);\n      setNextRain(forecastForToday.find((f) => f.weather[0].main === 'Rain'));\n    }\n  }, [forecast]);\n\n  const nextRainMessage = (nextRainForecast) => {\n    return message.precipitations(nextRainForecast.weather[0].description, getLocalTime(nextRain.dt * 1000));\n  };\n\n  const dateTime = () => {\n    const options = {weekday: 'long', month: 'long', day: 'numeric'};\n    return new Date().toLocaleString(message.locale, options);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.bg}>\n        <BackgroundImage weather={weather}/>\n      </div>\n\n\n      <div className={classes(styles.weatherComponent, styles.mainComponent)}>\n\n        <div className={styles.date}>{dateTime()}</div>\n\n        <div className={styles.currentWeather}>\n          <div className={classes(styles.item, styles.address)}>\n            {weather.name}\n          </div>\n\n          <div className={styles.description}>\n            <b>{weather.weather[0].description}</b>\n          </div>\n\n          <div className={styles.temp}>\n            <WeatherIcon\n              isDayTime={isDayTime(weather)}\n              weatherCode={weather.weather[0].id}\n              color=\"white\"\n            />\n            {fix(weather.main.temp) + '°C'}\n          </div>\n\n          <div className={styles.item}>\n            {message.feelsLike}: <strong>{fix(weather.main.feels_like) + 'º'}</strong>\n          </div>\n          <div className={styles.item}>\n            {message.humidity}: <strong>{fix(weather.main.humidity) + '%'}</strong>\n          </div>\n          <div className={styles.item}>\n            {message.wind}: <strong>{\n              fix(weather.wind.speed) + ' km/h ' + degreesToCardinal(weather.wind.deg)\n            }</strong>\n          </div>\n          {weather.weather[0].main !== 'Rain' && todayForecast.length > 0 && <div className={styles.item}>\n            <b>{nextRain ? nextRainMessage(nextRain) : message.noPrecipitations}</b>\n          </div>}\n        </div>\n        <div className={classes(styles.hideScrollbar, styles.forecast)}>\n          <TodayForecast weather={weather} forecasts={todayForecast}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nWeatherDetail.propTypes = {\n  weather: Weather,\n  forecast: Forecast\n};\n\nexport default WeatherDetail;\n","import axios from 'axios';\n\nconst URL = 'https://api.openweathermap.org/data/2.5';\nconst WEATHER = URL + '/weather';\nconst FORECAST = URL + '/forecast';\nconst IP_LOCATION = 'https://ipapi.co/json';\n\nconst baseParams = {\n  appid: 'bb08096af050f2bd4c2b401249b14e27', // OWM API ID\n  units: 'metric'\n};\n\nexport const getIpLocation = () => {\n  return axios.get(IP_LOCATION)\n    .then((response) => response.data)\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const getWeatherByCity = (zipCode, countryCode, language) => {\n  return axios.get(WEATHER, {\n    params: {\n      ...baseParams,\n      q: `${zipCode},${countryCode}`,\n      lang: language\n    }\n  }).then((response) => response.data)\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const getWeatherByCoords = (latitude, longitude, language) => {\n  return axios.get(WEATHER, {\n    params: {\n      ...baseParams,\n      lat: latitude,\n      lon: longitude,\n      lang: language\n    }\n  }).then((response) => response.data)\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const getForecastByCity = (zipCode, countryCode, language) => {\n  return axios.get(FORECAST, {\n    params: {\n      ...baseParams,\n      q: `${zipCode},${countryCode}`,\n      lang: language\n    }\n  }).then((response) => response.data)\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const getForecastByCoords = (latitude, longitude, language) => {\n  return axios.get(FORECAST, {\n    params: {\n      ...baseParams,\n      lat: latitude,\n      lon: longitude,\n      lang: language\n    }\n  }).then((response) => response.data)\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\n","import message from '../localization/weather/WeatherLocal';\nimport * as Service from '../services/weather.service';\n\nexport const findByCoords = async (lat, lon) => {\n  const [weatherResult, forecastResult] = await Promise.allSettled([\n    Service.getWeatherByCoords(lat, lon, message.getLanguage()),\n    Service.getForecastByCoords(lat, lon, message.getLanguage())\n  ]);\n\n  return {weather: weatherResult.value, forecast: forecastResult.value};\n};\n\nexport const getPosition = () => new Promise(function(resolve, reject) {\n  navigator.geolocation.getCurrentPosition(resolve, reject);\n});\n\n\nexport const findByCity = async (city, countryCode) => {\n  const location = await Service.getIpLocation();\n  if (location) {\n    const [weatherResult, forecastResult] = await Promise.allSettled([\n      Service.getWeatherByCity(city, countryCode, message.getLanguage()),\n      Service.getForecastByCity(city, countryCode, message.getLanguage())\n    ]);\n\n    return {weather: weatherResult.value, forecast: forecastResult.value};\n  }\n};\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport message from '../localization/weather/WeatherLocal';\nimport WeatherDetail from './weatherDetail/WeatherDetail';\nimport styles from './Weather.module.css';\nimport {findByCity, findByCoords, getPosition} from '../handlers/weather.handler';\nimport {getIpLocation} from '../services/weather.service';\n\nconst Weather = () => {\n  const [loading, setLoading] = React.useState(true);\n  const [weather, setWeather] = React.useState(null);\n  const [forecast, setForecast] = React.useState(null);\n  const [permission, setPermission] = React.useState(Permission.EMPTY);\n\n  React.useEffect(() => {\n    handlePermission();\n  }, []);\n\n  React.useEffect( () => {\n    populate().then();\n  }, [permission]);\n\n  const handlePermission = () => {\n    try {\n      navigator.permissions.query({name: 'geolocation'})\n        .then((result) => {\n          setPermission(result.state);\n          result.onchange = () => {\n            setPermission(result.state);\n          };\n        });\n    } catch (_ignored) {\n      setPermission(Permission.ERROR);\n    }\n  };\n\n  const populateByLocation = async () => {\n    const position = await getPosition();\n\n    if (position) {\n      const weather = await findByCoords(position.coords.latitude, position.coords.longitude);\n      setWeather(weather.weather);\n      setForecast(weather.forecast);\n    }\n  };\n\n\n  const populateByCity = async () => {\n    const location = await getIpLocation();\n    if (location) {\n      const weather = await findByCity(location.city, location.country_code);\n      setWeather(weather.weather);\n      setForecast(weather.forecast);\n    }\n  };\n\n  const populate = async () => {\n    if (permission === Permission.GRANTED) {\n      await populateByLocation();\n    }\n\n    if (permission === Permission.PROMPT) {\n      await populateByCity();\n      await populateByLocation();\n    }\n\n    if (permission === Permission.DENIED || permission === Permission.ERROR) {\n      await populateByCity();\n    }\n\n    if (permission !== Permission.EMPTY) {\n      setLoading(false);\n    }\n  };\n\n\n  const onFocus = () => {\n    populate().then();\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('focus', onFocus);\n\n    return () => {\n      window.removeEventListener('focus', onFocus);\n    };\n  });\n\n  return (\n    <div className={styles.container}>\n      {!weather && !loading && permission === Permission.DENIED &&\n        <Alert severity=\"error\">{message.geolocationDisabled}</Alert>\n      }\n      {!weather && !loading && permission === Permission.PROMPT &&\n        <Alert severity=\"info\">\n          <strong>{message.important}</strong>\n          {` ${message.geolocationRequest}`}\n        </Alert>\n      }\n      {weather && <WeatherDetail weather={weather} forecast={forecast} />}\n\n      {!weather && <div style={{display: 'flex', justifyContent: 'center', position: 'relative', top: '50%'}}>\n        <CircularProgress/>\n      </div>}\n\n    </div>\n  );\n};\n\nconst Permission = {\n  EMPTY: '',\n  PROMPT: 'prompt',\n  DENIED: 'denied',\n  GRANTED: 'granted',\n  ERROR: 'error'\n};\n\nexport default Weather;\n","import LocalizedStrings from 'react-localization';\n\nconst local = new LocalizedStrings({\n  en: {\n    lang: 'en',\n    title: 'Open Weather'\n  },\n  es: {\n    lang: 'es',\n    title: 'Clima Libre'\n  }\n});\n\nexport default local;\n","import React from 'react';\nimport './App.css';\nimport Weather from './components/Weather';\nimport local from './localization/AppLocal';\n\n\nfunction App() {\n  return (\n    <div className=\"app\" lang={local.lang}>\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}